{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"vehicle1\",\n  id: \"vehicle2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;EACOA,GAAG,EAAC;EAAWC,EAAE,EAAC;;;uBAAvBC,oBAAwC,KAAxC,cAAwC,IAAxC,EAAwC;EAAA;EAAxC","names":["ref","id","_createElementBlock"],"sourceRoot":"","sources":["F:\\hub-code\\h3c-screen\\src\\views\\vehicleData\\vehicleEcharts.vue"],"sourcesContent":["<template>\r\n  <div ref=\"vehicle1\" id=\"vehicle2\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport dayjs from 'dayjs'\r\nimport { inject, nextTick, onMounted, reactive, ref } from 'vue'\r\n\r\nlet echarts = inject('ec')\r\nconst colorList = ['#F1B164', '#05D2FC']\r\nlet myChart\r\n\r\nconst changeSize = (val) => {\r\n  let nowClientWidth =\r\n    window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n  // console.log('nowClientWidth', nowClientWidth)\r\n  return val * (nowClientWidth / 1920)\r\n}\r\n\r\nconst nowSize = (val) => {\r\n  //   console.log(val instanceof Array)\r\n  let data = ''\r\n  let arr = []\r\n  if (typeof val === 'object') {\r\n    if (val instanceof Array) {\r\n      val.forEach((item) => {\r\n        let size = changeSize(item)\r\n        arr.push(size)\r\n      })\r\n      data = arr\r\n    }\r\n  } else {\r\n    data = changeSize(val)\r\n  }\r\n  //   console.log('data::', data)\r\n  return data\r\n}\r\n\r\nconst getListData = (data) => {\r\n  data.forEach((item, index) => {\r\n    item.lineStyle = {\r\n      color: colorList[index],\r\n      width: 2\r\n    }\r\n    item.yAxisIndex = index\r\n  })\r\n}\r\n\r\nlet time = ref([\r\n  {\r\n    data: [\r\n      500, 800, 500, 200, 505, 700, 900, 700, 505, 600, 800, 905, 800, 700, 500, 40, 60, 75, 70, 60,\r\n      40, 35, 60, 20\r\n    ],\r\n    type: 'line',\r\n    smooth: true,\r\n    symbol: 'none',\r\n    name: '小车1'\r\n    // 对准左侧y轴\r\n    // yAxisIndex: 0\r\n  },\r\n  {\r\n    data: [\r\n      0, 20, 40, 58, 62, 50, 35, 55, 60, 70, 75, 65, 50, 40, 50, 70, 80, 95, 80, 60, 55, 70, 90, 70\r\n    ],\r\n    type: 'line',\r\n    smooth: true,\r\n    symbol: 'none',\r\n    name: '小车2'\r\n    // 对准右侧y轴\r\n    // yAxisIndex: 1\r\n  }\r\n])\r\n\r\nconst data = reactive({\r\n  options: {\r\n    // 图例设置\r\n    // legend: {},\r\n    // 在canvas中占据的大小\r\n    grid: {\r\n      left: '0%',\r\n      right: '0%',\r\n      top: '15%',\r\n      bottom: '3%',\r\n      containLabel: true\r\n    },\r\n    // 辅助线提示\r\n    // tooltip: {\r\n    //   trigger: 'axis'\r\n    // },\r\n    xAxis: {\r\n      type: 'category',\r\n      data: [\r\n        '2022-08-10 01:00:00',\r\n        '2022-08-10 02:00:00',\r\n        '2022-08-10 03:00:00',\r\n        '2022-08-10 04:00:00',\r\n        '2022-08-10 05:00:00',\r\n        '2022-08-10 06:00:00',\r\n        '2022-08-10 07:00:00',\r\n        '2022-08-10 08:00:00',\r\n        '2022-08-10 09:00:00',\r\n        '2022-08-10 10:00:00',\r\n        '2022-08-10 11:00:00',\r\n        '2022-08-10 12:00:00',\r\n        '2022-08-10 13:00:00',\r\n        '2022-08-10 14:00:00',\r\n        '2022-08-10 15:00:00',\r\n        '2022-08-10 16:00:00',\r\n        '2022-08-10 17:00:00',\r\n        '2022-08-10 18:00:00',\r\n        '2022-08-10 19:00:00',\r\n        '2022-08-10 20:00:00',\r\n        '2022-08-10 21:00:00',\r\n        '2022-08-10 22:00:00',\r\n        '2022-08-10 23:00:00',\r\n        '2022-08-10 00:00:00'\r\n      ],\r\n      axisLabel: {\r\n        // 坐标轴刻度标签的相关设置\r\n        show: true, // 控制显隐\r\n        color: '#E4E9EB', // x轴字体颜色\r\n        fontSize: nowSize(17), //\r\n        margin: nowSize(15), // x轴标签距离x轴距离\r\n        formatter: (value) => {\r\n          return dayjs(new Date(value)).format('HH:mm')\r\n        }\r\n      },\r\n      // x轴样式设置\r\n      axisLine: {\r\n        lineStyle: {\r\n          color: '#E4E9EB',\r\n          width: nowSize(2)\r\n        }\r\n      },\r\n      // x轴刻度线显隐\r\n      axisTick: {\r\n        show: false\r\n      }\r\n    },\r\n    yAxis: [\r\n      // 左侧y轴\r\n      {\r\n        type: 'value',\r\n        name: '米/秒',\r\n        // 名称位置\r\n        nameLocation: 'end',\r\n        // 名称间隔\r\n        nameGap: nowSize(20),\r\n        // y轴名称样式设置\r\n        nameTextStyle: {\r\n          color: '#E4E9EB',\r\n          fontSize: nowSize(15),\r\n          padding: nowSize([0, 50, 0, 0])\r\n        },\r\n        axisLabel: {\r\n          // 坐标轴刻度标签的相关设置\r\n          show: true, // 控制显隐\r\n          color: '#E4E9EB', // y轴字体颜色\r\n          fontSize: nowSize(17),\r\n          margin: nowSize(15)\r\n        },\r\n        // y轴分割线样式设置\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            width: nowSize(2),\r\n            color: 'rgba(228, 233, 235, 0.1)'\r\n          }\r\n        }\r\n      },\r\n      // 右侧y轴\r\n      {\r\n        type: 'value',\r\n        name: 'hz',\r\n        // min: 0,\r\n        // max: 100,\r\n        // 名称位置\r\n        nameLocation: 'end',\r\n        // 名称间隔\r\n        nameGap: nowSize(20),\r\n        // y轴名称样式设置\r\n        nameTextStyle: {\r\n          color: '#E4E9EB',\r\n          fontSize: nowSize(17),\r\n          padding: nowSize([0, 0, 0, 50])\r\n        },\r\n        axisLabel: {\r\n          // 坐标轴刻度标签的相关设置\r\n          show: true, // 控制显隐\r\n          color: '#E4E9EB', // y轴字体颜色\r\n          fontSize: nowSize(17),\r\n          margin: nowSize(15)\r\n        },\r\n        // y轴分割线样式设置\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            width: nowSize(2),\r\n            color: 'rgba(228, 233, 235, 0.1)'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    // 相关数据\r\n    series: time.value\r\n  }\r\n})\r\n\r\n// 初始化折线图\r\nconst initChart = () => {\r\n  myChart = echarts.init(document.getElementById('vehicle2'))\r\n  myChart.setOption(data.options)\r\n}\r\n// 监听更改折线图y轴有关数据\r\nconst changeyAxis = () => {\r\n  data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\r\n  data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\r\n  data.options.yAxis[0].axisLabel.margin = nowSize(15)\r\n  data.options.yAxis[1].axisLabel.margin = nowSize(15)\r\n  data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\r\n  data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\r\n  data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\r\n  data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\r\n  data.options.yAxis[0].nameGap = nowSize(20)\r\n  data.options.yAxis[1].nameGap = nowSize(20)\r\n  data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\r\n  data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\r\n}\r\n// 监听更改折线图x轴有关数据\r\nconst changexAxis = () => {\r\n  data.options.xAxis.axisLabel.fontSize = nowSize(17)\r\n  data.options.xAxis.axisLabel.margin = nowSize(15)\r\n  data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\r\n}\r\n\r\nonMounted(() => {\r\n  getListData(time.value)\r\n  nextTick(() => {\r\n    initChart()\r\n  })\r\n  // initChart()\r\n})\r\nwindow.onresize = (ec) => {\r\n  // 监听窗口大小变化\r\n  // myChart.resize() // 自适应大小变化\r\n  // console.log('111111')\r\n  changeyAxis()\r\n  changexAxis()\r\n  myChart.setOption(data.options)\r\n  myChart.resize() // 自适应大小变化\r\n  if (ec) return\r\n}\r\n</script>\r\n\r\n<style>\r\n.vehicle_echarts {\r\n  width: 92vw;\r\n  height: 28vh;\r\n  /* background-color: blanchedalmond; */\r\n  opacity: 0.7;\r\n  font-size: 1.3vw;\r\n}\r\n\r\n.vehicle_echarts1 {\r\n  width: 65vw;\r\n  height: 35vh;\r\n  /* background-color: blanchedalmond; */\r\n  opacity: 0.7;\r\n  font-size: 1.3vw;\r\n}\r\n\r\n#vehicle2 {\r\n  width: 100%;\r\n  /* height: 100%; */\r\n  height: inherit;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}